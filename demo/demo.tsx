// demo.tsx ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
import React, { useState, useEffect } from 'react';

// üü¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Å–≤–µ—Ç–∫–∏
/**
 * –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ö—É–∫–∞–º–∏,
 * —Ç–∏–ø–∞–º–∏ –∏ JSX ‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.
 */
const UserProfile: React.FC = () => {
  // üîµ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, —Ç–∏–ø, —Ö—É–∫
  const [user, setUser] = useState<{ name: string; age: number } | null>(null);

  // üü° useEffect ‚Äî —Ö—É–∫, –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
  useEffect(() => {
    fetch('/api/user')
      .then(res => res.json())
      .then(data => setUser(data))
      .catch(err => console.error('Error:', err)); // üî¥ –û—à–∏–±–∫–∞
  }, []);

  // üü£ JSX: —Ç–µ–≥–∏, –∞—Ç—Ä–∏–±—É—Ç—ã, –≤—Å—Ç–∞–≤–∫–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–π
  return (
    <div className="user-profile" data-active={!!user}>
      <h1>Welcome, {user?.name ?? 'Guest'}!</h1>
      {user && <p>Age: {user.age}</p>}
      <button onClick={() => setUser(null)}>Reset</button>
    </div>
  );
};

export default UserProfile;

// üü§ Rust-–ø–æ–¥–æ–±–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–¥–ª—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞)
type Config = {
  debug: boolean;
  timeout: number;
};

const config: Config = {
  debug: true,
  timeout: 5000,
};