/**
 *
 * src/colors/ThemeColors.ts
 *
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤ –¥–ª—è Vela Spectrum.
 *
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ –ø—Ä–µ—Å–µ—Ç—ã –≤ –ø–æ–ª–Ω—É—é, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É,
 * –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—É—é –ø–æ —Ä–æ–ª—è–º (accent, success, danger, syntax –∏ –¥—Ä.), —Å —É—á—ë—Ç–æ–º —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * (normal, dimmed, highContrast, colorblind, tritanopia) –∏ —Ç–∏–ø–∞ —Ç–µ–º—ã (—Å–≤–µ—Ç–ª–∞—è/—Ç—ë–º–Ω–∞—è).
 *
 * –í—Å–µ —Ü–≤–µ—Ç–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –≤ –ø–µ—Ä—Ü–µ–ø—Ç—É–∞–ª—å–Ω–æ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–º —Ü–≤–µ—Ç–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ OKLCH (l, c, h), –≥–¥–µ:
 * - l: —Å–≤–µ—Ç–ª–æ—Ç–∞ [0..1]
 * - c: –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (—Ö—Ä–æ–º–∞)
 * - h: —Ç–æ–Ω (hue) –≤ –≥—Ä–∞–¥—É—Å–∞—Ö [0..360)
 *
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ü–∏—é —Ü–≤–µ—Ç–æ–≤ –¥–ª—è:
 * - –ü—Ä–æ—Ç–∞–Ω–æ–ø–∏–∏/–¥–µ–π—Ç–µ—Ä–∞–Ω–æ–ø–∏–∏ (`colorblind`) ‚Äî —Å–¥–≤–∏–≥ —Å–∏–Ω–µ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã—Ö —Ç–æ–Ω–æ–≤
 * - –¢—Ä–∏—Ç–∞–Ω–æ–ø–∏–∏ (`tritanopia`) ‚Äî –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å–∏–Ω–µ-–∂—ë–ª—Ç–æ–π –∑–æ–Ω—ã
 * - –í—ã—Å–æ–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞ ‚Äî –±–∏–Ω–∞—Ä–Ω–∞—è —Å–≤–µ—Ç–ª–æ—Ç–∞ –∏ —É—Å–∏–ª–µ–Ω–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å
 * - –ü—Ä–∏–≥–ª—É—à—ë–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ ‚Äî —Å–Ω–∏–∂–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏ –∏ –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç–∏
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ThemeGenerator –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–æ–ª–µ–π —Ç–µ–º—ã,
 * –≤–∫–ª—é—á–∞—è UI, —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, ANSI-—Ü–≤–µ—Ç–∞ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (done, closed, open).
 *
 * @class ThemeColors
 * @author telianedward
 * @see https://github.com/telianedward/VelaSpectrum
 * @see https://en.wikipedia.org/wiki/Color_blindness    ‚Äì –¶–≤–µ—Ç–æ–≤–∞—è —Å–ª–µ–ø–æ—Ç–∞ –∏ –µ—ë —Ç–∏–ø—ã
 * @see https://www.color-blindness.com    ‚Äì –°–∏–º—É–ª—è—Ç–æ—Ä—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
 * @license MIT
 *
 */
import OKLCHColorGenerator from './ColorConverter.js';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã
import { type DetailedPalette } from '../themes/colorPalettePresets.js';

/**
 * –¢–∏–ø, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–º—ã.
 *
 * –ö–∞–∂–¥—ã–π —Ä–µ–∂–∏–º –∏–∑–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è, –∫–æ–º—Ñ–æ—Ä—Ç–∞ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.
 * –†–µ–∂–∏–º—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–º—ã –∏ –≤–ª–∏—è—é—Ç –Ω–∞:
 * - –ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (chroma)
 * - –°–≤–µ—Ç–ª–æ—Ç—É (lightness)
 * - –¢–æ–Ω (hue)
 * - –ö–æ–Ω—Ç—Ä–∞—Å—Ç
 *
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–µ–∂–∏–º—ã:
 *
 * @example
 * // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–º—ã
 * ThemeGenerator.generate('default-d', 'normal');
 * ThemeGenerator.generate('default-d', 'colorblind');
 *
 * @property {'normal'} normal - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –±–µ–∑ –∫–æ—Ä—Ä–µ–∫—Ü–∏–π
 * @property {'dimmed'} dimmed - –ü—Ä–∏–≥–ª—É—à—ë–Ω–Ω—ã–π —Ä–µ–∂–∏–º: —Å–Ω–∏–∂–µ–Ω–∞ –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–≤–µ—Ç–ª–æ—Ç–∞
 * @property {'highContrast'} highContrast - –†–µ–∂–∏–º –≤—ã—Å–æ–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞: —É–≤–µ–ª–∏—á–µ–Ω–∞ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å–≤–µ—Ç–ª—ã–º–∏ –∏ —Ç—ë–º–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
 * @property {'colorblind'} colorblind - –†–µ–∂–∏–º –¥–ª—è –ø—Ä–æ—Ç–∞–Ω–æ–ø–∏–∏/–¥–µ–π—Ç–µ—Ä–∞–Ω–æ–ø–∏–∏: –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–Ω–æ–≤ –≤ —Å–∏–Ω–µ-—Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–π –∑–æ–Ω–µ
 * @property {'tritanopia'} tritanopia - –†–µ–∂–∏–º –¥–ª—è —Ç—Ä–∏—Ç–∞–Ω–æ–ø–∏–∏: –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–Ω–æ–≤ –≤ —Å–∏–Ω–µ-–∂—ë–ª—Ç–æ–π –∑–æ–Ω–µ
 *
 * @see https://en.wikipedia.org/wiki/Color_blindness    ‚Äì –¶–≤–µ—Ç–æ–≤–∞—è —Å–ª–µ–ø–æ—Ç–∞
 * @see https://www.color-blindness.com    ‚Äì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–∏–º—É–ª—è—Ç–æ—Ä—ã –¥–ª—è –¥–∞–ª—å—Ç–æ–Ω–∏–∫–æ–≤
 * @see {@link ThemeColors.adjustHue} ‚Äì –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
 * @see {@link ThemeColors.adjustChroma} ‚Äì –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç–∏
 * @see {@link ThemeColors.adjustLightness} ‚Äì –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å–≤–µ—Ç–ª–æ—Ç—ã
 */
type ThemeMode =
  | 'normal'        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º
  | 'dimmed'        // –ü—Ä–∏–≥–ª—É—à—ë–Ω–Ω—ã–π —Ä–µ–∂–∏–º (–º–µ–Ω–µ–µ —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞)
  | 'highContrast'  // –í—ã—Å–æ–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç (–¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏)
  | 'colorblind'    // –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ç–∞–Ω–æ–ø–∏–∏/–¥–µ–π—Ç–µ—Ä–∞–Ω–æ–ø–∏–∏
  | 'tritanopia';   // –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª—è —Ç—Ä–∏—Ç–∞–Ω–æ–ø–∏–∏

export class ThemeColors {
  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É —Ü–≤–µ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ—Å–µ—Ç–∞ –∏ —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
   *
   * @param {DetailedPalette} palette - –ü—Ä–µ—Å–µ—Ç —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è light/dark
   * @param {ThemeMode} mode - –†–µ–∂–∏–º: normal, dimmed, highContrast, colorblind, tritanopia
   * @param {boolean} isDark - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–º–∞ —Ç—ë–º–Ω–æ–π
   * @returns {Object} –û–±—ä–µ–∫—Ç —Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –≥—Ä—É–ø–ø–∞–º–∏ —Ü–≤–µ—Ç–æ–≤ (canvas, fg, accent –∏ —Ç.–¥.)
   */
  static generate ( palette: DetailedPalette, mode: ThemeMode, isDark: boolean ) {
    // –í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É –ø–æ —Ç–∏–ø—É —Ç–µ–º—ã
    const role = isDark ? palette.dark : palette.light;
    // console.log('üé® Palette role:', role);
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
    const getColor = ( key: string ): { l: number; c: number; h: number; } => {
      // üîç –û—Ç–ª–∞–¥–∫–∞: —á—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è
      // console.log( `üîç getColor: –∑–∞–ø—Ä–æ—à–µ–Ω –∫–ª—é—á "${ key }"` );

      let colorName = ThemeColors.getNestedValue( role, key );
      //onsole.log( `üîç getColor: –Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ "${ colorName }" (—Ç–∏–ø: ${ typeof colorName })` );

      // üîÅ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ 'fg.muted' ‚Üí 'steelSlate'
      while ( colorName && typeof colorName === 'string' && colorName.includes( '.' ) ) {
        const resolved = ThemeColors.getNestedValue( role, colorName );
        console.log( `üîç getColor: —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø—É—Ç—å "${ colorName }" ‚Üí "${ resolved }"` );
        if ( !resolved ) break;
        colorName = resolved;
      }

      // üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
      if ( typeof colorName !== 'string' ) {
        console.error(
          `‚ùå –û–∂–∏–¥–∞–ª–∞—Å—å —Å—Ç—Ä–æ–∫–∞, –Ω–æ –ø–æ–ª—É—á–µ–Ω ${ typeof colorName }:`,
          colorName,
          '–¥–ª—è –∫–ª—é—á–∞:',
          key
        );
        return { l: 0.5, c: 0.1, h: 220 };
      }

      if ( !colorName ) {
        console.warn( `üü° –¶–≤–µ—Ç –¥–ª—è –∫–ª—é—á–∞ "${ key }" –Ω–µ –Ω–∞–π–¥–µ–Ω` );
        return { l: 0.5, c: 0.1, h: 220 };
      }

      // üîí –ó–∞—â–∏—Ç–∞ –æ—Ç getOklch
      try {
        const result = this.getOklch( colorName );
        // console.log( `‚úÖ getColor: "${ key }" ‚Üí "${ colorName }" ‚Üí OKLCH:`, result );
        return result;
      } catch ( error ) {
        console.error( `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–≤–µ—Ç–∞ "${ colorName }" (–∫–ª—é—á: "${ key }"):`, error );
        return { l: 0.5, c: 0.1, h: 220 };
      }
    };

    // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
    const accentBase = getColor( 'accent.fg' );
    const successBase = getColor( 'success.fg' );
    const dangerBase = getColor( 'danger.fg' );
    const warningBase = getColor( 'warning.fg' );
    const infoBase = getColor( 'info.fg' );

    // ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º isDark –≤ adjustHue, adjustChroma, adjustLightness
    const hAccent = this.adjustHue( accentBase.h, mode, isDark );
    const hSuccess = this.adjustHue( successBase.h, mode, isDark );
    const hDanger = this.adjustHue( dangerBase.h, mode, isDark );
    const hWarning = this.adjustHue( warningBase.h, mode, isDark );
    const hInfo = this.adjustHue( infoBase.h, mode, isDark );

    const cAccent = this.adjustChroma( accentBase.c, mode, isDark );
    const cSuccess = this.adjustChroma( successBase.c, mode, isDark );
    const cDanger = this.adjustChroma( dangerBase.c, mode, isDark );
    const cWarning = this.adjustChroma( warningBase.c, mode, isDark );
    const cInfo = this.adjustChroma( infoBase.c, mode, isDark );

    const lAccent = this.adjustLightness( 0.8, mode, isDark );
    const lAccentEmphasis = this.adjustLightness( 0.7, mode, isDark );
    const lSuccess = this.adjustLightness( 0.7, mode, isDark );
    const lSuccessEmphasis = this.adjustLightness( 0.6, mode, isDark );
    const lDanger = this.adjustLightness( 0.7, mode, isDark );
    const lDangerEmphasis = this.adjustLightness( 0.6, mode, isDark );
    const lWarning = this.adjustLightness( 0.8, mode, isDark );
    const lWarningEmphasis = this.adjustLightness( 0.7, mode, isDark );
    const lInfo = this.adjustLightness( 0.8, mode, isDark );
    const lInfoEmphasis = this.adjustLightness( 0.7, mode, isDark );

    const ansiRed = getColor( 'ansi.red' );
    const ansiGreen = getColor( 'ansi.green' );
    const ansiYellow = getColor( 'ansi.yellow' );
    const ansiBlue = getColor( 'ansi.blue' );
    const ansiMagenta = getColor( 'ansi.magenta' );
    const ansiCyan = getColor( 'ansi.cyan' );
    // üî• === –û–¢–õ–ê–î–ö–ê: –î–æ–±–∞–≤—å —ç—Ç–æ ===
    // console.log('üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º—ã:', { mode, isDark });
    // console.log('Accent base:', accentBase);
    // console.log('cAccent –ø–æ—Å–ª–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏:', cAccent);
    // console.log('hAccent –ø–æ—Å–ª–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏:', hAccent);
    // üîö === –ö–æ–Ω–µ—Ü –æ—Ç–ª–∞–¥–∫–∏ ===

    return {
      /**
       * –¶–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –∏ "—Ö–æ–ª—Å—Ç–∞" –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
       * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è:
       * - –§–æ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
       * - –§–æ–Ω–∞ –±–æ–∫–æ–≤—ã—Ö –ø–∞–Ω–µ–ª–µ–π
       * - –§–æ–Ω–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
       *
       * @example
       * "editor.background": canvas.inset
       * "sideBar.background": canvas.inset
       */
      canvas: {
        inset: getColor( 'canvas.inset' ),
        overlay: getColor( 'canvas.overlay' )
      },

      /**
       * –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –∏–∫–æ–Ω–æ–∫.
       * –û–ø—Ä–µ–¥–µ–ª—è—é—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç.
       *
       * @example
       * "foreground": fg.default
       * "sideBar.foreground": fg.default
       */
      fg: {
        default: getColor( 'fg.default' ),
        muted: getColor( 'fg.muted' ),
        subtle: getColor( 'fg.subtle' )
      },

      /**
       * –ê–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç.
       * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∏–Ω–∏–π, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π).
       * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
       *
       * @example
       * "activityBar.foreground": accent.fg
       * "focusBorder": accent.emphasis
       */
      accent: {
        fg: { l: lAccent, c: cAccent, h: hAccent },
        emphasis: { l: lAccentEmphasis, c: cAccent * 1.1, h: hAccent },
        muted: { l: 0.6, c: cAccent * 0.8, h: hAccent }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π (–∑–µ–ª—ë–Ω—ã–µ).
       * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ Git (–¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã), –ø—Ä–æ–≥—Ä–µ—Å—Å–µ, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.
       *
       * @example
       * "gitDecoration.addedResourceForeground": success.emphasis
       * "problems.errorForeground": success.fg
       */
      success: {
        fg: { l: lSuccess, c: cSuccess, h: hSuccess },
        emphasis: { l: lSuccessEmphasis, c: cSuccess * 1.2, h: hSuccess },
        muted: { l: 0.6, c: cSuccess * 0.8, h: getColor( 'success.muted' ).h }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è –æ—à–∏–±–æ–∫ –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π (–∫—Ä–∞—Å–Ω—ã–µ).
       * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ Git (—É–¥–∞–ª—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã), –æ—à–∏–±–∫–∞—Ö, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö.
       *
       * @example
       * "gitDecoration.deletedResourceForeground": danger.muted
       * "editorError.foreground": danger.fg
       */
      danger: {
        fg: { l: lDanger, c: cDanger, h: hDanger },
        emphasis: { l: lDangerEmphasis, c: cDanger * 1.2, h: hDanger },
        muted: { l: 0.6, c: cDanger * 0.8, h: getColor( 'danger.muted' ).h }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–∂—ë–ª—Ç—ã–µ).
       * –í VS Code –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "severe", –Ω–æ –ø–æ —Å–º—ã—Å–ª—É ‚Äî —ç—Ç–æ warning.
       *
       * @example
       * "editorWarning.foreground": severe.fg
       */
      severe: {
        fg: { l: lWarning, c: cWarning, h: hWarning },
        emphasis: { l: 0.7, c: cWarning * 0.9, h: hWarning },
        muted: { l: 0.6, c: cWarning * 0.7, h: getColor( 'warning.muted' ).h }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–∏–Ω–∏–µ).
       * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –≤–æ–ø—Ä–æ—Å–æ–≤.
       *
       * @example
       * "editorInfo.foreground": attention.fg
       */
      attention: {
        fg: { l: lInfo, c: cInfo, h: hInfo },
        emphasis: { l: lInfoEmphasis, c: cInfo * 1.1, h: hInfo }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è —Å–ø–æ–Ω—Å–æ—Ä–æ–≤, –ø–ª–∞—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, "–ø–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç".
       * –û–±—ã—á–Ω–æ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –∏–ª–∏ —Ä–æ–∑–æ–≤—ã–µ.
       *
       * @example
       * "sash.hoverBorder": sponsors.fg
       */
      sponsors: {
        fg: { l: 0.75, c: cAccent * 0.9, h: getColor( 'sponsors.fg' ).h },
        muted: { l: 0.6, c: cAccent * 0.7, h: getColor( 'sponsors.muted' ).h }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è "—Å–¥–µ–ª–∞–Ω–æ", "–≤—ã–ø–æ–ª–Ω–µ–Ω–æ".
       * –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–∞—Ö –∑–∞–¥–∞—á, –ø—Ä–æ–≥—Ä–µ—Å—Å–µ.
       *
       * @example
       * "list.completedTaskIcon.foreground": done.fg
       */
      done: {
        fg: { l: 0.7, c: cSuccess * 0.9, h: getColor( 'done.fg' ).h },
        emphasis: { l: 0.6, c: cSuccess * 1.1, h: getColor( 'done.emphasis' ).h },
        muted: { l: 0.6, c: cSuccess * 0.6, h: getColor( 'done.muted' ).h }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è "–∑–∞–∫—Ä—ã—Ç–æ".
       * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –≤–∫–ª–∞–¥–∫–∞—Ö, –∑–∞–¥–∞—á–∞—Ö, —Ç–∏–∫–µ—Ç–∞—Ö.
       *
       * @example
       * "tab.inactiveModifiedBorder": closed.fg
       */
      closed: {
        fg: { l: 0.6, c: cDanger * 0.9, h: getColor( 'closed.fg' ).h },
        /**
         * –ë–æ–ª–µ–µ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è.
         */
        emphasis: { l: 0.6, c: cDanger * 1.2, h: getColor( 'closed.fg' ).h },
        /**
         * –ü—Ä–∏–≥–ª—É—à—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è.
         */
        muted: { l: 0.6, c: cDanger * 0.8, h: getColor( 'closed.fg' ).h }
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è "–æ—Ç–∫—Ä—ã—Ç–æ".
       * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–∫–∞—Ö, –∑–∞–¥–∞—á–∞—Ö, —Ñ–∞–π–ª–∞—Ö.
       *
       * @example
       * "tab.activeBorder": open.emphasis
       */
      open: {
        fg: { l: 0.7, c: cSuccess * 0.8, h: getColor( 'open.fg' ).h },
        emphasis: { l: 0.6, c: cSuccess * 1.0, h: getColor( 'open.emphasis' ).h }
      },

      /**
       * ANSI-—Ü–≤–µ—Ç–∞ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞.
       * –ü–æ–ª–Ω–∞—è 16-—Ü–≤–µ—Ç–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞.
       *
       * @example
       * "terminal.ansiRed": ansi.red
       * "terminal.ansiGreenBright": ansi.greenBright
       */
      ansi: {
        black: getColor( 'ansi.black' ),
        red: ansiRed ? {
          l: 0.4,
          c: this.adjustChroma( ansiRed.c, mode, isDark ),
          h: this.adjustHue( ansiRed.h, mode, isDark )
        } : { l: 0.4, c: 0.2, h: 0 },
        green: ansiGreen ? {
          l: 0.5,
          c: this.adjustChroma( ansiGreen.c, mode, isDark ),
          h: this.adjustHue( ansiGreen.h, mode, isDark )
        } : { l: 0.5, c: 0.2, h: 140 },
        yellow: ansiYellow ? {
          l: 0.6,
          c: this.adjustChroma( ansiYellow.c, mode, isDark ),
          h: this.adjustHue( ansiYellow.h, mode, isDark )
        } : { l: 0.6, c: 0.2, h: 80 },
        blue: ansiBlue ? {
          l: 0.55,
          c: this.adjustChroma( ansiBlue.c, mode, isDark ),
          h: this.adjustHue( ansiBlue.h, mode, isDark )
        } : { l: 0.55, c: 0.25, h: 275 },
        magenta: ansiMagenta ? {
          l: 0.5,
          c: this.adjustChroma( ansiMagenta.c, mode, isDark ),
          h: this.adjustHue( ansiMagenta.h, mode, isDark )
        } : { l: 0.5, c: 0.2, h: 350 },
        cyan: ansiCyan ? {
          l: 0.55,
          c: this.adjustChroma( ansiCyan.c, mode, isDark ),
          h: this.adjustHue( ansiCyan.h, mode, isDark )
        } : { l: 0.55, c: 0.2, h: 200 },
        white: getColor( 'ansi.white' ),
        blackBright: getColor( 'ansi.blackBright' ),
        redBright: { l: 0.5, c: this.adjustChroma( getColor( 'ansi.redBright' )?.c || 0.2, mode, isDark ), h: this.adjustHue( getColor( 'ansi.redBright' )?.h || 0, mode, isDark ) },
        greenBright: { l: 0.6, c: this.adjustChroma( getColor( 'ansi.greenBright' )?.c || 0.2, mode, isDark ), h: this.adjustHue( getColor( 'ansi.greenBright' )?.h || 140, mode, isDark ) },
        yellowBright: { l: 0.7, c: this.adjustChroma( getColor( 'ansi.yellowBright' )?.c || 0.2, mode, isDark ), h: this.adjustHue( getColor( 'ansi.yellowBright' )?.h || 80, mode, isDark ) },
        blueBright: { l: 0.65, c: this.adjustChroma( getColor( 'ansi.blueBright' )?.c || 0.25, mode, isDark ), h: this.adjustHue( getColor( 'ansi.blueBright' )?.h || 275, mode, isDark ) },
        magentaBright: { l: 0.6, c: this.adjustChroma( getColor( 'ansi.magentaBright' )?.c || 0.2, mode, isDark ), h: this.adjustHue( getColor( 'ansi.magentaBright' )?.h || 350, mode, isDark ) },
        cyanBright: { l: 0.65, c: this.adjustChroma( getColor( 'ansi.cyanBright' )?.c || 0.2, mode, isDark ), h: this.adjustHue( getColor( 'ansi.cyanBright' )?.h || 200, mode, isDark ) },
        whiteBright: getColor( 'ansi.whiteBright' )
      },

      /**
       * –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ (—Å–µ—Ä—ã–µ).
       * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≥—Ä–∞–Ω–∏—Ü, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π, —Ñ–æ–Ω–æ–≤.
       *
       * @example
       * "border.muted": neutral.muted
       * "list.hoverBackground": neutral.emphasis
       */
      neutral: {
        muted: getColor( 'neutral.muted' ),
        emphasis: getColor( 'neutral.emphasis' ),
        emphasisPlus: getColor( 'neutral.emphasisPlus' )
      },

      /**
       * –¶–≤–µ—Ç–∞ –≥—Ä–∞–Ω–∏—Ü.
       * –û–±—ã—á–Ω–æ –ø—Ä–∏–≥–ª—É—à—ë–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥—Ä—É–≥–∏—Ö —Ü–≤–µ—Ç–æ–≤.
       *
       * @example
       * "editorGutter.addedBackground": border.muted
       */
      border: {
        muted: getColor( 'border.muted' )
      },

      /**
       * –¶–≤–µ—Ç–∞ –¥–ª—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–π –∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∫–æ–¥–∞.
       * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ tokenColors –¥–ª—è —Ç–æ—á–Ω–æ–π —Ä–∞—Å–∫—Ä–∞—Å–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Ç–∏–ø–æ–≤, —Ñ—É–Ω–∫—Ü–∏–π –∏ —Ç.–¥.
       */
      syntax: {
        // === –¢–∏–ø—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ===
        type: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.type' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.type' ).h, mode, isDark ) },
        enum: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.enum' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.enum' ).h, mode, isDark ) },
        interface: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.interface' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.interface' ).h, mode, isDark ) },
        class: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.class' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.class' ).h, mode, isDark ) },
        struct: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.struct' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.struct' ).h, mode, isDark ) },

        // === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ===
        variable: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.variable' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.variable' ).h, mode, isDark ) },
        parameter: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.parameter' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.parameter' ).h, mode, isDark ) },
        property: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.property' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.property' ).h, mode, isDark ) },
        field: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.field' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.field' ).h, mode, isDark ) },
        constant: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.constant' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.constant' ).h, mode, isDark ) },
        local: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.local' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.local' ).h, mode, isDark ) },

        // === –§—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã ===
        function: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.function' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.function' ).h, mode, isDark ) },
        method: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.method' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.method' ).h, mode, isDark ) },
        arrowFunction: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.arrowFunction' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.arrowFunction' ).h, mode, isDark ) },
        constructor: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.constructor' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.constructor' ).h, mode, isDark ) },

        // === –ú–æ–¥—É–ª–∏ –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º—ë–Ω ===
        module: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.module' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.module' ).h, mode, isDark ) },
        namespace: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.namespace' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.namespace' ).h, mode, isDark ) },

        // === –õ–∏—Ç–µ—Ä–∞–ª—ã ===
        string: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.string' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.string' ).h, mode, isDark ) },
        number: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.number' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.number' ).h, mode, isDark ) },
        boolean: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.boolean' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.boolean' ).h, mode, isDark ) },
        null: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.null' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.null' ).h, mode, isDark ) },
        regexp: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.regexp' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.regexp' ).h, mode, isDark ) },
        templateString: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.templateString' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.templateString' ).h, mode, isDark ) },

        // === –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã ===
        keyword: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.keyword' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.keyword' ).h, mode, isDark ) },
        operator: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.operator' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.operator' ).h, mode, isDark ) },
        modifier: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.modifier' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.modifier' ).h, mode, isDark ) },
        decorator: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.decorator' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.decorator' ).h, mode, isDark ) },
        comment: { l: 0.6, c: this.adjustChroma( getColor( 'syntax.comment' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.comment' ).h, mode, isDark ) },

        // === –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ===
        error: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.error' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.error' ).h, mode, isDark ) },
        warning: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.warning' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.warning' ).h, mode, isDark ) },
        info: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.info' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.info' ).h, mode, isDark ) },

        // === –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ —Ä–æ–ª–∏ ===
        tag: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.tag' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.tag' ).h, mode, isDark ) },
        support: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.support' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.support' ).h, mode, isDark ) },
        punctuation: { l: 0.6, c: this.adjustChroma( getColor( 'syntax.punctuation' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.punctuation' ).h, mode, isDark ) },
        heading: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.heading' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.heading' ).h, mode, isDark ) },
        quote: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.quote' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.quote' ).h, mode, isDark ) },
        embedded: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.embedded' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.embedded' ).h, mode, isDark ) },
        inserted: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.inserted' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.inserted' ).h, mode, isDark ) },
        deleted: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.deleted' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.deleted' ).h, mode, isDark ) },
        changed: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.changed' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.changed' ).h, mode, isDark ) },
        ignored: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.ignored' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.ignored' ).h, mode, isDark ) },
        range: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.range' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.range' ).h, mode, isDark ) },
        header: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.header' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.header' ).h, mode, isDark ) },
        separator: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.separator' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.separator' ).h, mode, isDark ) },
        output: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.output' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.output' ).h, mode, isDark ) },
        link: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.link' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.link' ).h, mode, isDark ) },
        inline: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.inline' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.inline' ).h, mode, isDark ) },
        emphasis: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.emphasis' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.emphasis' ).h, mode, isDark ) },
        strong: { l: 0.7, c: this.adjustChroma( getColor( 'syntax.strong' ).c, mode, isDark ), h: this.adjustHue( getColor( 'syntax.strong' ).h, mode, isDark ) }
      }
    };
  }

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –ø—É—Ç–∏.
   *
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤—ã—Ö –ø—É—Ç–µ–π –≤–∏–¥–∞ 'canvas.inset', 'accent.fg', 'syntax.keyword' –∏ —Ç.–¥.
   * –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –æ–±—ä–µ–∫—Ç—É, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞—â–∞—è—Å—å –∫ –∫–∞–∂–¥–æ–º—É –∫–ª—é—á—É –≤ –ø—É—Ç–∏.
   *
   * @example
   * getNestedValue({ canvas: { inset: 'frostWhite' } }, 'canvas.inset') ‚Üí 'frostWhite'
   * getNestedValue({ accent: { fg: 'blues' } }, 'accent.fg') ‚Üí 'blues'
   * getNestedValue({ accent: {} }, 'accent.fg') ‚Üí undefined + –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
   *
   * @param obj - –ò—Å—Ö–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—â–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `palette.dark` –∏–ª–∏ `palette.light`)
   * @param path - –°—Ç—Ä–æ–∫–∞ —Å –ø—É—Ç—ë–º –∫ –∑–Ω–∞—á–µ–Ω–∏—é, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω–∞—è —Ç–æ—á–∫–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'canvas.inset', 'accent.fg.muted')
   * @returns –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏ (–æ–±—ã—á–Ω–æ —Å—Ç—Ä–æ–∫–∞ ‚Äî –∏–º—è —Ü–≤–µ—Ç–∞), –∏–ª–∏ `undefined`, –µ—Å–ª–∏ –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω
   *
   * @throws –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å, –µ—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –∫–ª—é—á–µ–π –≤ –ø—É—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
   */
  private static getNestedValue ( obj: any, path: string ): string | undefined {
    const keys = path.split( '.' );
    let current = obj;

    for ( const key of keys ) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –æ–±—ä–µ–∫—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç –∫–ª—é—á
      if ( current == null || typeof current !== 'object' || !( key in current ) ) {
        console.warn( `–ü—É—Ç—å "${ path }" –Ω–µ –Ω–∞–π–¥–µ–Ω: –∫–ª—é—á "${ key }" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç` );
        return undefined;
      }
      current = current[ key ];
    }

    return current;
  }

  /**
   * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–º—è —Ü–≤–µ—Ç–∞ –≤ –µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ —Ü–≤–µ—Ç–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ OKLCH.
   *
   * –§—É–Ω–∫—Ü–∏—è –∏—â–µ—Ç —Ü–≤–µ—Ç –ø–æ –∏–º–µ–Ω–∏ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ `colors.json` —á–µ—Ä–µ–∑ `OKLCHColorGenerator.getColorRgb`,
   * –∑–∞—Ç–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –µ–≥–æ RGB-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ OKLCH ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ü–≤–µ—Ç–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ,
   * –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–µ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ —Ü–≤–µ—Ç–∞ —á–µ–ª–æ–≤–µ–∫–æ–º.
   *
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ `ThemeColors.generate` –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤ —Ç–µ–º—ã.
   *
   * @example
   * getOklch('blues') ‚Üí { l: 0.55, c: 0.25, h: 275 }
   * getOklch('greens') ‚Üí { l: 0.64, c: 0.17, h: 152 }
   *
   * @param colorName - –ò–º—è —Ü–≤–µ—Ç–∞ (–∫–ª—é—á –∏–∑ `colors.json`, –Ω–∞–ø—Ä–∏–º–µ—Ä 'blues', 'reds', 'frostWhite')
   * @returns –û–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ `{ l, c, h }` –≤ —Ñ–æ—Ä–º–∞—Ç–µ OKLCH:
   *   - `l` ‚Äî —Å–≤–µ—Ç–ª–æ—Ç–∞ [0..1]
   *   - `c` ‚Äî –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (chroma)
   *   - `h` ‚Äî —Ç–æ–Ω (hue) –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
   *
   * @throws –û—à–∏–±–∫–∞, –µ—Å–ª–∏ —Ü–≤–µ—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ `colors.json`
   *
   * @see {@link OKLCHColorGenerator.findColor} ‚Äî –ø–æ–ª—É—á–µ–Ω–∏–µ RGB –ø–æ –∏–º–µ–Ω–∏
   * @see {@link OKLCHColorGenerator.rgbToOklch} ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è RGB ‚Üí OKLCH
   */
  private static getOklch ( colorName: string ): { l: number; c: number; h: number; } {
    const colorEntry = OKLCHColorGenerator.findColor( colorName );
    if ( !colorEntry ) {
      throw new Error( `–¶–≤–µ—Ç "${ colorName }" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ —Ü–≤–µ—Ç–æ–≤ (colors.json)` );
    }

    const rgbColor = {
      mode: 'rgb' as const,
      r: colorEntry.rgb.r,
      g: colorEntry.rgb.g,
      b: colorEntry.rgb.b,
      alpha: 1
    };

    return OKLCHColorGenerator.rgbToOklch( rgbColor );
  }

  /**
   * –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç —Ç–æ–Ω (hue) —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç–∏–ø–∞ —Ç–µ–º—ã.
   *
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è —Ü–≤–µ—Ç–æ–≤:
   * - –í —Ä–µ–∂–∏–º–µ `colorblind` —Å–¥–≤–∏–≥–∞—é—Ç—Å—è —Å–∏–Ω–µ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –∏ –∑–µ–ª—ë–Ω—ã–µ —Ç–æ–Ω–∞
   * - –í —Ä–µ–∂–∏–º–µ `tritanopia` –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—Ç—Å—è —Å–∏–Ω–∏–µ –∏ –∂—ë–ª—Ç—ã–µ –∑–æ–Ω—ã
   * - –í `dimmed` –∏ `highContrast` ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π (—Ç–æ–Ω —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è)
   *
   * @example
   * adjustHue(275, 'colorblind', true) ‚Üí 250 // —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞: —Å–∏–Ω–∏–π ‚Üí –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π
   * adjustHue(275, 'colorblind', false) ‚Üí 245 // —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞: —á—É—Ç—å –º—è–≥—á–µ
   * adjustHue(120, 'normal', true) ‚Üí 120    // –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
   *
   * @param h - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–æ–Ω –≤ –≥—Ä–∞–¥—É—Å–∞—Ö (–¥–∏–∞–ø–∞–∑–æ–Ω 0‚Äì360)
   * @param mode - –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: 'normal', 'dimmed', 'highContrast', 'colorblind', 'tritanopia'
   * @param isDark - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–º–∞ —Ç—ë–º–Ω–æ–π (true) –∏–ª–∏ —Å–≤–µ—Ç–ª–æ–π (false)
   * @returns –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–Ω (–≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0‚Äì360)
   */
  private static adjustHue ( h: number, mode: ThemeMode, isDark: boolean ): number {
    // üîπ –†–µ–∂–∏–º normal ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if ( mode === 'normal' ) {
      return h;
    }

    // üîπ –†–µ–∂–∏–º colorblind (–ø—Ä–æ—Ç–∞–Ω–æ–ø–∏—è/–¥–µ–π—Ç–µ—Ä–∞–Ω–æ–ø–∏—è)
    if ( mode === 'colorblind' ) {
      if ( h >= 200 && h <= 300 ) {
        return isDark ? 250 : 245; // –¢—ë–º–Ω–∞—è: –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–Ω–∏–π, —Å–≤–µ—Ç–ª–∞—è: —á—É—Ç—å –º—è–≥—á–µ
      }
      if ( h >= 130 && h < 200 ) {
        return isDark ? 180 : 175; // –ó–µ–ª—ë–Ω—ã–π ‚Üí –±–∏—Ä—é–∑–æ–≤—ã–π (—Å–≤–µ—Ç–ª–∞—è ‚Äî —á—É—Ç—å –ø—Ä–∏–≥–ª—É—à—ë–Ω–Ω–µ–µ)
      }
      if ( h < 130 || h > 300 ) {
        return 90; // –ö—Ä–∞—Å–Ω—ã–π/–æ—Ä–∞–Ω–∂–µ–≤—ã–π/–∂—ë–ª—Ç—ã–π ‚Üí –∂—ë–ª—Ç—ã–π (–æ–¥–∏–Ω–∞–∫–æ–≤–æ)
      }
      return h;
    }

    // üîπ –†–µ–∂–∏–º tritanopia (–Ω–∞—Ä—É—à–µ–Ω–∏–µ —Å–∏–Ω–µ–≥–æ –∫–∞–Ω–∞–ª–∞)
    if ( mode === 'tritanopia' ) {
      if ( h >= 240 && h <= 300 ) {
        return isDark ? 280 : 270; // –°–∏–Ω–∏–π ‚Üí —Å–∏–Ω–µ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π (—Å–≤–µ—Ç–ª–∞—è ‚Äî —á—É—Ç—å –º—è–≥—á–µ)
      }
      if ( h >= 180 && h < 240 ) {
        return isDark ? 220 : 215; // –ì–æ–ª—É–±–æ–π ‚Üí –±–∏—Ä—é–∑–æ–≤—ã–π
      }
      if ( h >= 40 && h < 100 ) {
        return isDark ? 130 : 125; // –ñ—ë–ª—Ç—ã–π ‚Üí –∑–µ–ª—ë–Ω—ã–π (—Å–≤–µ—Ç–ª–∞—è ‚Äî —á—É—Ç—å –ø—Ä–∏–≥–ª—É—à—ë–Ω–Ω–µ–µ)
      }
      return h;
    }

    // üîπ –î–ª—è dimmed –∏ highContrast ‚Äî –Ω–µ –º–µ–Ω—è–µ–º —Ç–æ–Ω
    return h;
  }

  /**
   * –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (chroma) —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –∏ —Ç–∏–ø–∞ —Ç–µ–º—ã.
   *
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–æ–¥ —É—Å–ª–æ–≤–∏—è:
   * - –í —Ä–µ–∂–∏–º–µ `dimmed`: —Å–Ω–∏–∂–∞–µ—Ç—Å—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (–Ω–∞ 30% –¥–ª—è —Ç—ë–º–Ω—ã—Ö, 35% –¥–ª—è —Å–≤–µ—Ç–ª—ã—Ö)
   * - –í —Ä–µ–∂–∏–º–µ `highContrast`: —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è, –Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ sRGB
   * - –í —Ä–µ–∂–∏–º–µ `tritanopia`: —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –ª—É—á—à–µ–π —Ä–∞–∑–ª–∏—á–∏–º–æ—Å—Ç–∏
   *
   * @example
   * adjustChroma(0.25, 'dimmed', true) ‚Üí 0.175  // —Ç—ë–º–Ω–∞—è: 30%
   * adjustChroma(0.25, 'dimmed', false) ‚Üí 0.1625 // —Å–≤–µ—Ç–ª–∞—è: 35%
   * adjustChroma(0.25, 'highContrast', true) ‚Üí 0.325 (–Ω–æ –Ω–µ –±–æ–ª–µ–µ 0.4)
   *
   * @param c - –ò—Å—Ö–æ–¥–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (chroma), –æ–±—ã—á–Ω–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0..1]
   * @param mode - –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param isDark - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–º–∞ —Ç—ë–º–Ω–æ–π (true) –∏–ª–∏ —Å–≤–µ—Ç–ª–æ–π (false)
   * @returns –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å
   */
  private static adjustChroma ( c: number, mode: ThemeMode, isDark: boolean ): number {
    if ( mode === 'dimmed' ) {
      return isDark ? c * 0.7 : c * 0.65; // –¢—ë–º–Ω–∞—è: -30%, —Å–≤–µ—Ç–ª–∞—è: -35% (—á—Ç–æ–±—ã –Ω–µ "–≤—ã–±–∏–≤–∞–ª–æ –≥–ª–∞–∑–∞")
    }

    if ( mode === 'highContrast' ) {
      return Math.min( c * 1.3, 0.4 ); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 0.4
    }

    if ( mode === 'tritanopia' ) {
      return Math.min( c * ( isDark ? 1.5 : 1.4 ), 0.4 ); // –¢—ë–º–Ω–∞—è: +50%, —Å–≤–µ—Ç–ª–∞—è: +40%
    }

    return c;
  }

  /**
   * –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç —Å–≤–µ—Ç–ª–æ—Ç—É (lightness) —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –∏ —Ç–∏–ø–∞ —Ç–µ–º—ã.
   *
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞:
   * - –î–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã: —Å–Ω–∏–∂–∞–µ–º —è—Ä–∫–æ—Å—Ç—å –Ω–∞ 8%, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å "–≤—ã–±–µ–ª–∏–≤–∞–Ω–∏–µ"
   * - –í —Ä–µ–∂–∏–º–µ `dimmed`: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ç–µ–º–Ω—è–µ–º (–Ω–∞ 5% –¥–ª—è —Ç—ë–º–Ω—ã—Ö, 6% –¥–ª—è —Å–≤–µ—Ç–ª—ã—Ö)
   * - –í —Ä–µ–∂–∏–º–µ `highContrast`: –±–∏–Ω–∞—Ä–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç (—á—ë—Ä–Ω–æ–µ/–±–µ–ª–æ–µ)
   * - –í —Ä–µ–∂–∏–º–µ `tritanopia`: –ª—ë–≥–∫–æ–µ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –¥–ª—è —Å–≤–µ—Ç–ª—ã—Ö —Ç–µ–º
   *
   * üî• –ö–ª—é—á–µ–≤–æ–µ: –≤ `highContrast` –¥–ª—è –°–í–ï–¢–õ–û–ô —Ç–µ–º—ã ‚Äî —á—ë—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –±–µ–ª–æ–º —Ñ–æ–Ω–µ
   *
   * @example
   * adjustLightness(0.8, 'normal', false) ‚Üí 0.736  // —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ ‚Äî –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
   * adjustLightness(0.6, 'highContrast', false) ‚Üí 0.0  // —Å–≤–µ—Ç–ª–∞—è + HC ‚Üí —á—ë—Ä–Ω—ã–π
   * adjustLightness(0.4, 'highContrast', true) ‚Üí 1.0  // —Ç—ë–º–Ω–∞—è + HC ‚Üí –±–µ–ª—ã–π
   *
   * @param l - –ò—Å—Ö–æ–¥–Ω–∞—è —Å–≤–µ—Ç–ª–æ—Ç–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0..1]
   * @param mode - –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param isDark - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–º–∞ —Ç—ë–º–Ω–æ–π (true) –∏–ª–∏ —Å–≤–µ—Ç–ª–æ–π (false)
   * @returns –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–≤–µ—Ç–ª–æ—Ç–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0..1]
   */
  private static adjustLightness ( l: number, mode: ThemeMode, isDark: boolean ): number {
    // üîπ –†–µ–∂–∏–º highContrast ‚Äî –±–∏–Ω–∞—Ä–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç
    if ( mode === 'highContrast' ) {
      if ( !isDark ) {
        return l > 0.3 ? 0.0 : 0.0; // –°–≤–µ—Ç–ª–∞—è: –ø–æ—á—Ç–∏ –≤—Å—ë ‚Üí —á—ë—Ä–Ω–æ–µ
      }
      return l > 0.5 ? 1.0 : 0.0; // –¢—ë–º–Ω–∞—è: –±–µ–ª–æ–µ –∏–ª–∏ —á—ë—Ä–Ω–æ–µ
    }

    // üîπ –î–ª—è –°–í–ï–¢–õ–û–ô —Ç–µ–º—ã: —Å–Ω–∏–∂–∞–µ–º —è—Ä–∫–æ—Å—Ç—å –Ω–∞ 8%
    if ( !isDark ) {
      l = l * 0.92;
    }

    // üîπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø–æ —Ä–µ–∂–∏–º—É
    if ( mode === 'dimmed' ) {
      return isDark ? l * 0.95 : l * 0.94; // –¢—ë–º–Ω–∞—è: -5%, —Å–≤–µ—Ç–ª–∞—è: -6%
    }

    if ( mode === 'tritanopia' ) {
      if ( !isDark ) {
        return l * 0.95; // –°–≤–µ—Ç–ª–∞—è: —á—É—Ç—å –∑–∞—Ç–µ–º–Ω—è–µ–º
      }
      return l; // –¢—ë–º–Ω–∞—è: –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    }

    return l;
  }
}